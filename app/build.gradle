plugins {
    alias(libs.plugins.androidApplication)
}

android {
    namespace 'com.example.cocktailapp'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.cocktailapp"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation libs.retrofit
    implementation(libs.picasso)
    implementation(libs.recyclerview)
    implementation(libs.converter.gson)
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    def room_version = "2.6.1"

    implementation libs.room.runtime
    annotationProcessor "androidx.room:room-compiler:$room_version"
    def lifecycle_version = "2.7.0"
    def arch_version = "2.2.0"

    // ViewModel
    implementation libs.androidx.lifecycle.viewmodel
    // LiveData
    implementation libs.androidx.lifecycle.livedata
    // Lifecycles only (without ViewModel or LiveData)
    implementation libs.androidx.lifecycle.runtime

    // Saved state module for ViewModel
    implementation libs.androidx.lifecycle.viewmodel.savedstate.v270

    // Annotation processor
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation libs.androidx.lifecycle.common.java8

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation libs.androidx.lifecycle.service

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation libs.androidx.lifecycle.process

    // optional - ReactiveStreams support for LiveData
    implementation libs.androidx.lifecycle.reactivestreams

    // optional - Test helpers for LiveData
    testImplementation libs.androidx.core.testing

    // optional - Test helpers for Lifecycle runtime
    testImplementation libs.androidx.lifecycle.runtime.testing
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
}